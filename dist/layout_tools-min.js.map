{"version":3,"sources":["../js/_settings.js","../js/_ui.js","../js/_breakpoints.js","../js/_viewport-info.js","../js/_device-Info.js","../js/_imgs-info.js","../js/layout_tools.js"],"names":["lt","vers","times","unitSpacing","storage_key","settings","hidden","pictures_info","upd_settings","obj","Object","assign","sessionStorage","JSON","stringify","lt_ui","other_toolbars","wrapper_id","other_toolbars_selectors","get_other_toolbars","forEach","selector","this_toolbar","document","querySelector","push","body","insertAdjacentHTML","wrapper","getElementById","innerHTML","content_wrapper","brkpt_wrapper","addEventListener","classList","toggle","hide_btn","set_hidden","add_storage","is_hidden","contains","toolbar","toggleAttribute","remove","lt_brkpt","fw_breakpoints_map","bootstrap3","bootstrap4","foundation6","framework","lt_viewport_info","lt_vpinfo","body_font_size","parseFloat","window","getComputedStyle","getPropertyValue","getViewportSize","vw","Math","max","documentElement","clientWidth","innerWidth","vh","clientHeight","innerHeight","vw_em","toFixed","vh_em","body_width","body_width_em","body_height","body_height_em","resizeObserver","ResizeObserver","observe","onresize","lt_device_info","lt_dinfo","navigator","userAgent","devicePixelRatio","screen","width","height","lt_imgs_info","imgs","getElementsByTagName","imgsInfoTrigger","removeImgsInfo","querySelectorAll","item","shortenSrcString","str","shortenSrc","src","srcElements","trim","split","strPrefix","length","slice","join","map","formatPropValue","prop","value","indexOf","showImgsInfo","img","img_info_rows","img_props","rows","updImgsInfo","upd_img_props","nextElementSibling","imgs_info","checked","stored_settings","parse","currentScript","currentDir","substring","lastIndexOf","dataset","fw","css","lt_css_el","createElement","onload","href","rel","type","media","head","appendChild"],"mappings":"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","sourcesContent":["export var lt = {\n  vers: '3.3.0',\n  times: '&VeryThinSpace;&times;&VeryThinSpace;', // carattere x e spaziatura\n  unitSpacing: '&VeryThinSpace;',\n  storage_key: 'lt_settings',\n\n  // defaults\n  settings: {\n    hidden: false,\n    pictures_info: false\n  },\n\n  upd_settings: obj => {\n    lt.settings = Object.assign({}, lt.settings, obj);\n    sessionStorage[lt.storage_key] = JSON.stringify(lt.settings);\n  }\n\n};\n","import {lt} from './_settings';\n\nexport default function () {\n\n  // le toolbar aggiuntive possono essere caricate dopo layout tools\n  // e vengono quindi elborate dai selettori indicati in `other_toolbars_selectors`\n  let other_toolbars = null;\n\n  const wrapper_id = 'lt-wrapper',\n    other_toolbars_selectors = ['.sf-toolbar'], // selettori di altre toolbar da rimuovere\n\n    get_other_toolbars = () => {\n      if(other_toolbars === null) {\n        other_toolbars = [];\n        other_toolbars_selectors.forEach(selector => {\n          let this_toolbar = document.querySelector(selector);\n          if(this_toolbar) {\n            other_toolbars.push(this_toolbar);\n          }\n        });\n      }\n      return other_toolbars;\n    };\n\n\n  document.body.insertAdjacentHTML('beforeend', '<div id=\"' + wrapper_id + '\" class=\"lt-collapsed\"></div>');\n  lt.wrapper = document.getElementById(wrapper_id);\n\n  lt.wrapper.innerHTML = `<div class=\"lt-inner-wrapper\">\n      <div class=\"lt-content\">\n        <div>\n          <button class=\"lt-hide-show-btn\">Hide</button>\n          <button class=\"lt-remove-btn\">Remove</button>\n        </div>\n      </div>\n      <div class=\"lt-brkpt\">&#x2732;</div>\n    </div>`;\n\n  lt.content_wrapper = lt.wrapper.querySelector('.lt-content');\n  lt.brkpt_wrapper = lt.wrapper.querySelector('.lt-brkpt');\n\n  // contrazione wrapper\n  lt.brkpt_wrapper.addEventListener('click', function () {\n    lt.wrapper.classList.toggle('lt-collapsed');\n  }, false);\n\n  // layout tools e sf toolbar invisibili\n  const hide_btn = lt.content_wrapper.querySelector('.lt-hide-show-btn'),\n    set_hidden = (add_storage) => {\n      lt.wrapper.classList.toggle('lt-hidden');\n      let is_hidden = lt.wrapper.classList.contains('lt-hidden');\n\n      get_other_toolbars().forEach(toolbar => {\n        toolbar.toggleAttribute('hidden', is_hidden);\n      });\n\n      hide_btn.innerHTML = is_hidden ? 'Show' : 'Hide';\n      if(add_storage) {\n        lt.upd_settings({hidden: is_hidden});\n      }\n    };\n\n  hide_btn.addEventListener('click', () => {\n    set_hidden(true);\n  },false);\n\n  if(lt.settings.hidden) {\n    set_hidden(false);\n  }\n\n  // eliminazione completa delle barre\n  lt.content_wrapper.querySelector('.lt-remove-btn').addEventListener('click', () => {\n    lt.wrapper.remove();\n    get_other_toolbars().forEach(toolbar => {\n      toolbar.remove();\n    });\n    // la barra viene mostrata al successivo reload\n    lt.upd_settings({hidden: false});\n  });\n}\n","import {lt} from './_settings';\n/*\n  caricamento indicatori breakpoint e dimensioni viewport\n\n  Se lo script Ã¨ definito  il parametro `fw: __framework__`, viene visualizzato un div informativo\n  con breakpoint attivo, dimensioni della pagina ecc.\n  e caricato un css di formattazione\n\n  __framework__ corrisponde alla sigla del fw: bootstrap3, bootstrap4, foundation6, ecc.\n\n*/\n\nexport default function () {\n\n  const fw_breakpoints_map= {\n\n    bootstrap3  : '<span class=\"visible-xs-inline\">xs</span>' +\n        '<span class=\"visible-sm-inline\">sm</span>' +\n        '<span class=\"visible-md-inline\">md</span>' +\n        '<span class=\"visible-lg-inline\">lg</span>',\n\n    bootstrap4  : '<span class=\"d-sm-none\">xs</span>' +\n        '<span class=\"d-none d-sm-inline d-md-none\">sm</span>' +\n        '<span class=\"d-none d-md-inline d-lg-none\">md</span>' +\n        '<span class=\"d-none d-lg-inline d-xl-none\">lg</span>' +\n        '<span class=\"d-none d-xl-inline\">xl</span>',\n\n    foundation6 : '<span class=\"show-for-small-only\">small</span>' +\n        '<span class=\"show-for-medium-only\">medium</span>' +\n        '<span class=\"show-for-large-only\">large</span>' +\n        '<span class=\"show-for-xlarge\">xlarge</span>'\n  };\n\n  if(lt.framework) {\n    lt.brkpt_wrapper.innerHTML = fw_breakpoints_map[lt.framework];\n  }\n\n}\n","import {lt} from './_settings';\n\nexport default function () {\n  'use strict';\n\n  //viewport info\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-vpinfo\"></div>');\n\n  const lt_vpinfo = lt.content_wrapper.querySelector('.lt-vpinfo'),\n    body_font_size = parseFloat(window.getComputedStyle(document.body, null)\n      .getPropertyValue('font-size')),\n    getViewportSize = function () {\n      let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0),\n        vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n        vw_em = (vw / body_font_size).toFixed(2),\n        vh_em = (vh / body_font_size).toFixed(2),\n\n        body_width = document.documentElement.clientWidth,\n        body_width_em = (body_width / body_font_size).toFixed(2),\n        body_height = document.documentElement.clientHeight,\n        body_height_em = (body_height / body_font_size).toFixed(2);\n\n      lt_vpinfo.innerHTML = `<div class=\"heading\">Viewport info</div>\n        ${vw}${lt.times}${vh}${lt.unitSpacing}px\n        /\n        ${vw_em}${lt.times}${vh_em}${lt.unitSpacing}em\n        <br><br>\n        <strong>body*:</strong><br>\n        ${body_width}${lt.times}${body_height}${lt.unitSpacing}px\n        /\n        ${body_width_em}${lt.times}${body_height_em}${lt.unitSpacing}em\n        <br>\n        <small><em>(*) Altezza uguale a viewport se body height: 100%</em></small>`;\n    };\n\n\n  getViewportSize();\n\n  if('ResizeObserver' in window) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      getViewportSize();\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = getViewportSize; // safari, ie\n  }\n}\n","import {lt} from './_settings';\n\nexport default function () {\n\n  //device info\n\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-device-info\"></div>');\n\n  const lt_dinfo = lt.content_wrapper.querySelector('.lt-device-info');\n\n  lt_dinfo.innerHTML = `<div class=\"heading\">Device info</div>\n    <dl>\n      <dt>userAgent</dt>\n      <dd>\n        ${window.navigator.userAgent}\n      </dd>\n      <dt>devicePixelRatio</dt>\n      <dd>\n        ${window.devicePixelRatio}\n      </dd>\n      <dt>screen.width / height</dt>\n      <dd>\n        ${window.screen.width}${lt.times}${window.screen.height}${lt.unitSpacing}px\n      </dd>\n    </dl>`;\n\n}\n","import {lt} from './_settings';\n\nexport default function () {\n  'use strict';\n\n  //ui\n  lt.content_wrapper.insertAdjacentHTML('beforeend',\n    '<div><label><input type=\"checkbox\" class=\"lt-imgs-info-trigger\">Imgs info</label</div>'\n  );\n\n  let imgs = document.getElementsByTagName('img');\n\n  const imgsInfoTrigger = lt.content_wrapper.querySelector('.lt-imgs-info-trigger'),\n    removeImgsInfo = () => {\n      document.querySelectorAll('.lt-img-info-wrapper').forEach(item => {\n        item.remove();\n      });\n    },\n    shortenSrcString = (str) => {\n      // mantiene solo gli ultimi due elementi del path\n      const shortenSrc = src => {\n        let srcElements = src.trim().split('/'),\n          strPrefix = srcElements.length > 2? '[&hellip;] /' : '';\n        return `<span title=\"${src}\">${strPrefix}${srcElements.slice(-2).join('/')}</span>`;\n      };\n\n      return str.split(',').map(item => {\n        return shortenSrc(item);\n      }).join(',<br>');\n    },\n    formatPropValue = (prop, value) => {\n      if(value) {\n        if(['src', 'currentSrc', 'srcset'].indexOf(prop) !== -1 ) {\n          return shortenSrcString(value);\n        } else {\n          return value;\n        }\n      } else {\n        return '&mdash;';\n      }\n    },\n\n    //img info\n    showImgsInfo = () => {\n\n      [...imgs].forEach(img => {\n\n        const img_info_rows = () => {\n          const img_props = [\n            'src',\n            'currentSrc',\n            'srcset',\n            'sizes',\n            'media',\n            'width',\n            'height',\n            'naturalWidth',\n            'naturalHeight',\n            'id',\n            'className'\n          //'attributes'\n          ];\n\n          let rows = '';\n          // img.dataset.ltImgIdx = idx;\n\n          img_props.forEach(prop => {\n            rows += `<tr>\n              <th scope=\"row\">${prop}</th>\n              <td class=\"lt-img-${prop}\">${formatPropValue(prop, img[prop])}</td>\n            </tr>`;\n          });\n\n          return rows;\n        };\n\n        img.insertAdjacentHTML('afterend',\n          `<details class=\"lt-img-info-wrapper\">\n            <summary>Info</summary>\n            <table>\n              <tbody>\n                ${img_info_rows()}\n              </tbody>\n            </table>\n          </details>`\n        );\n\n\n\n      }); // end foreach\n    }, // end showImgsInfo\n\n    updImgsInfo = () => {\n      const upd_img_props = [\n        'currentSrc',\n        'width',\n        'height'\n      ];\n      [...imgs].forEach(img => {\n        upd_img_props.forEach(prop => {\n          img.nextElementSibling.querySelector(`td.lt-img-${prop}`).innerHTML =\n            formatPropValue(prop, img[prop]);\n        });\n      }); // end foreach\n\n    }; // end updImgsInfo\n\n  imgsInfoTrigger.addEventListener('click', () => {\n    lt.upd_settings({imgs_info: imgsInfoTrigger.checked});\n\n    if( imgsInfoTrigger.checked ) {\n      showImgsInfo();\n    } else {\n      removeImgsInfo();\n    }\n  }, false);\n\n  if(lt.settings.imgs_info) {\n    showImgsInfo();\n    imgsInfoTrigger.checked = true;\n  }\n\n  if('ResizeObserver' in window) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      if( imgsInfoTrigger.checked ) {\n        updImgsInfo();\n      }\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = function () {\n      if( imgsInfoTrigger.checked ) {\n        updImgsInfo();\n      }\n    }; // safari, ie\n  }\n\n}\n","/**\n * layout_tools.js - 4 / Massimo Cassandro / 2016-2020\n */\n\nimport {lt} from './_settings';\nimport lt_ui from './_ui';\nimport lt_brkpt from './_breakpoints';\nimport lt_viewport_info from './_viewport-info';\nimport lt_device_info from './_device-Info';\nimport lt_imgs_info from './_imgs-info';\n\n\n(() => {\n\n  const stored_settings = sessionStorage[lt.storage_key]? JSON.parse(sessionStorage[lt.storage_key]) : {};\n  lt.settings = Object.assign({}, lt.settings , stored_settings);\n\n\n  // load css and init\n  let currentScript = document.currentScript;\n  lt.currentDir = currentScript.src.split('?')[0];\n  lt.currentDir = lt.currentDir.substring(0, lt.currentDir.lastIndexOf('/'));\n\n  lt.framework = currentScript.dataset.fw || 'bootstrap4';\n  lt.css = currentScript.dataset.css || lt.currentDir + '/layout_tools.css';\n\n  let lt_css_el = document.createElement('link');\n  lt_css_el.onload = function() {\n    lt_ui();\n    lt_brkpt();\n    lt_viewport_info();\n    lt_device_info();\n    lt_imgs_info();\n  };\n  lt_css_el.href = lt.css + '?v=' + lt.vers;\n  lt_css_el.rel =  'stylesheet';\n  lt_css_el.type = 'text/css';\n  lt_css_el.media = 'screen';\n  document.head.appendChild(lt_css_el);\n\n})();\n"]}